// Sprite data generated using
//   http://www.rinkydinkelectronics.com/_t_doimageconverter565.php
// If that goes down, try
//   https://javl.github.io/image2cpp/

#ifndef SPRITES_H
#define SPRITES_H
#include <stdint.h>
#include <pgmspace.h>
#include <ESP32-HUB75-MatrixPanel-I2S-DMA.h>

struct Sprite {
    uint8_t width;
    uint8_t height;
    const uint16_t* data;
};

void drawSprite(MatrixPanel_I2S_DMA* matrix, int x, int y, const Sprite& sprite);

// Sprite data definitions
const unsigned short SUN[800] PROGMEM = {
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xED06, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0010 (16) pixels
0xBF5E, 0xBF5E, 0xDBC3, 0xED06, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0020 (32) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xED06, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xF689, 0xDBC3, 0xBF5E, 0xBF5E,   // 0x0030 (48) pixels
0xBF5E, 0xED06, 0xF689, 0xED06, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0040 (64) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xF689, 0xED06, 0xDBC3, 0xED06, 0xF689, 0xF689, 0xF689, 0xED06, 0xDBC3,   // 0x0050 (80) pixels
0xED06, 0xF689, 0xF689, 0xED06, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0060 (96) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xF689, 0xBAC1, 0xBAC1, 0xBAC1, 0xBAC1,   // 0x0070 (112) pixels
0xBAC1, 0xBAC1, 0xF689, 0xF689, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xED06, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0080 (128) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xED06, 0xF689, 0xF689, 0xBAC1, 0xBAC1, 0xF689, 0xF689, 0xF79E, 0xF79E,   // 0x0090 (144) pixels
0xF689, 0xF689, 0xBAC1, 0xBAC1, 0xF689, 0xED06, 0xDBC3, 0xDBC3, 0xED06, 0xF689, 0xDBC3, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x00A0 (160) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xDBC3, 0xDBC3, 0xED06, 0xF689, 0xF689, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xF79E, 0xF79E, 0xF79E,   // 0x00B0 (176) pixels
0xF79E, 0xF689, 0xF689, 0xF689, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xF689, 0xDBC3, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x00C0 (192) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0xED06, 0xF689, 0xF689, 0xF689, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF79E, 0xF79E,   // 0x00D0 (208) pixels
0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xDBC3, 0xF689, 0xF689, 0xED06, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x00E0 (224) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0xDBC3, 0xF689, 0xF689, 0x6940, 0xF689, 0x6940, 0xBAC1, 0xBAC1, 0xED06, 0xF689, 0xF689,   // 0x00F0 (240) pixels
0xF689, 0xED06, 0xBAC1, 0x6940, 0xF689, 0x6940, 0xF689, 0xF689, 0xED06, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0100 (256) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xED06, 0xF689, 0x6940, 0xF689, 0x6940, 0xF689, 0xF79E, 0xF79E, 0xF79E, 0xF79E, 0xF689,   // 0x0110 (272) pixels
0xF79E, 0xF79E, 0xF79E, 0xF689, 0x6940, 0xF689, 0x6940, 0xF689, 0xF689, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0120 (288) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xF689, 0xF689, 0x6940, 0xF689, 0x6940, 0xF79E, 0xF79E, 0xF79E, 0xF79E, 0x6940, 0xF689,   // 0x0130 (304) pixels
0x6940, 0xF79E, 0xF79E, 0xF79E, 0x6940, 0xF689, 0x6940, 0xF689, 0xF689, 0xF689, 0xED06, 0xDBC3, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0140 (320) pixels
0xBF5E, 0xBF5E, 0xDBC3, 0xED06, 0xF689, 0xF689, 0xF689, 0xED06, 0xBAC1, 0xF689, 0xBAC1, 0xF79E, 0xF79E, 0xF79E, 0xF79E, 0xF689,   // 0x0150 (336) pixels
0xF79E, 0xF79E, 0xF79E, 0xBAC1, 0xF689, 0xBAC1, 0xED06, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xED06, 0xED06, 0xDBC3,   // 0x0160 (352) pixels
0xBF5E, 0xBF5E, 0x1355, 0x1355, 0xDBC3, 0xF689, 0xF689, 0xED06, 0xF689, 0xF689, 0xF689, 0xDBC3, 0xDBC3, 0xED06, 0xF689, 0xF689,   // 0x0170 (368) pixels
0xED06, 0xDBC3, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xED06, 0xF689, 0xF689, 0xF689, 0xED06, 0xDBC3, 0xDBC3, 0x1355, 0x1355, 0x1355,   // 0x0180 (384) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0xDBC3, 0xF689, 0xED06, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689,   // 0x0190 (400) pixels
0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xED06, 0xF689, 0xF689, 0xED06, 0x1355, 0x1355, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x01A0 (416) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xED06, 0xF689, 0xDBC3, 0xF689, 0xED06, 0xBAC1, 0x6940, 0x6940, 0x6940, 0x6940, 0x6940,   // 0x01B0 (432) pixels
0x6940, 0x6940, 0x6940, 0xBAC1, 0xED06, 0xF689, 0xDBC3, 0xF689, 0xF689, 0xED06, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x01C0 (448) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689,   // 0x01D0 (464) pixels
0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xF689, 0xED06, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x01E0 (480) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xDBC3, 0xED06, 0xED06, 0xF689, 0xBAC1, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689,   // 0x01F0 (496) pixels
0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xBAC1, 0xF689, 0xF689, 0xED06, 0xED06, 0xDBC3, 0xDBC3, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0200 (512) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0x1355, 0x1355, 0x1355, 0xDBC3, 0xF689, 0xBAC1, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689,   // 0x0210 (528) pixels
0xF689, 0xF689, 0xF689, 0xF689, 0xBAC1, 0xF689, 0xF689, 0xDBC3, 0x1355, 0x1355, 0x1355, 0x1355, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0220 (544) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xED06, 0xF689, 0xF689, 0xBAC1, 0xBAC1, 0xF689, 0xF689, 0xF689, 0xF689,   // 0x0230 (560) pixels
0xF689, 0xF689, 0xBAC1, 0xBAC1, 0xF689, 0xF689, 0xED06, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0240 (576) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xBAC1, 0xBAC1, 0xBAC1, 0xBAC1,   // 0x0250 (592) pixels
0xBAC1, 0xBAC1, 0xF689, 0xF689, 0xF689, 0xF689, 0xED06, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0260 (608) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0xF689, 0xF689, 0xED06, 0xDBC3, 0xDBC3, 0xED06, 0xF689, 0xF689, 0xF689, 0xF689,   // 0x0270 (624) pixels
0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xF689, 0xED06, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0280 (640) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xED06, 0xDBC3, 0xDBC3, 0x1355, 0x1355, 0x1355, 0x1355, 0xDBC3, 0xDBC3, 0xED06, 0xF689,   // 0x0290 (656) pixels
0xF689, 0xF689, 0xED06, 0xDBC3, 0xDBC3, 0xED06, 0xF689, 0xF689, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x02A0 (672) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xDBC3, 0x1355, 0x1355, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0x1355, 0x1355, 0xDBC3,   // 0x02B0 (688) pixels
0xF689, 0xED06, 0x1355, 0x1355, 0x1355, 0x1355, 0xDBC3, 0xED06, 0xF689, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x02C0 (704) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0x1355,   // 0x02D0 (720) pixels
0xED06, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0x1355, 0xDBC3, 0xED06, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x02E0 (736) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x02F0 (752) pixels
0x1355, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0x1355, 0xDBC3, 0xDBC3, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0300 (768) pixels
0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0310 (784) pixels
0xBF5E, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E, 0x1355, 0x1355, 0xBF5E, 0xBF5E, 0xBF5E, 0xBF5E,   // 0x0320 (800) pixels
};
const Sprite sunSprite = {32, 25, SUN};

#endif